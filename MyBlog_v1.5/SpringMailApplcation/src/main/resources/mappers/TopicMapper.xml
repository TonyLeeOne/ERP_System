<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tony.blog.dao.TopicMapper">
  <resultMap id="BaseResultMap" type="com.tony.blog.entity.Topic">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="ctime" jdbcType="VARCHAR" property="ctime" />
    <association property="profile" javaType="com.tony.blog.entity.Profile">
      <result column="uid" jdbcType="VARCHAR" property="uid" />
      <result column="img" jdbcType="VARCHAR" property="img" />
    </association>
    <association property="user" javaType="com.tony.blog.entity.User">
      <id column="uid" jdbcType="VARCHAR" property="uid"/>
      <result column="username" jdbcType="VARCHAR" property="username"/>
      <result column="level" jdbcType="INTEGER" property="level"/>
    </association>
    <collection property="comments" javaType="com.tony.blog.entity.Comment">
      <id column="cid" jdbcType="VARCHAR" property="id"/>
    </collection>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.tony.blog.entity.Topic">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, uid, subject, category, status, ctime
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>

  <select id="selectByStatus" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    t.id,t.uid,t.subject,t.category,t.status,t.ctime,p.img,p.uid,c.id cid
    from topic t
    inner join profile p on t.uid=p.uid
    left join comment c on t.id=c.tid
    where t.status = #{status,jdbcType=CHAR} order by t.ctime DESC
  </select>

  <select id="find" parameterType="map" resultMap="BaseResultMap">
    select
    t.id,
    t.uid,
    t.subject,
    t.category,
    t.status,
    t.ctime,
    p.img,
    p.uid
    from topic t
    inner join profile p
    on t.uid=p.uid
    <trim prefix="WHERE" prefixOverrides="AND |OR ">
      <if test="status!=null">
        t.status = #{status,jdbcType=CHAR}
      </if>
      <if test="uid!=null">
        t.uid = #{uid,jdbcType=VARCHAR}
      </if>
      <if test="category!=null">
        t.category = #{category,jdbcType=VARCHAR}
      </if>
    </trim>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    t.*,
    p.img,
    u.username,
    u.level
    from topic t
    inner join
    profile p on t.uid=p.uid
    inner join
    user u on t.uid=u.uid
    where t.id = #{id,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from topic
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.tony.blog.entity.Topic">
    insert into topic (id, uid, subject, 
      category, status, ctime, 
      content)
    values (#{id,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, 
      #{category,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{ctime,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.tony.blog.entity.Topic">
    insert into topic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.tony.blog.entity.Topic">
    update topic
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tony.blog.entity.Topic">
    update topic
    set uid = #{uid,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      ctime = #{ctime,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.tony.blog.entity.Topic">
    update topic
    set uid = #{uid,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      ctime = #{ctime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="findTags" resultType="java.lang.String">
    select distinct(category) from topic order by ctime DESC
  </select>

</mapper>