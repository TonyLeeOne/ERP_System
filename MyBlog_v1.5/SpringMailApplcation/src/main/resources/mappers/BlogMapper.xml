<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tony.blog.dao.BlogMapper">
  <resultMap id="BaseResultMap" type="com.tony.blog.entity.Blog">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="ptime" jdbcType="VARCHAR" property="ptime" />
    <result column="utime" jdbcType="VARCHAR" property="utime" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <association property="user" javaType="com.tony.blog.entity.User">
      <result column="uid" jdbcType="VARCHAR" property="uid"></result>
      <result column="username" jdbcType="VARCHAR" property="username"></result>
      <result column="password" jdbcType="VARCHAR" property="password"></result>
      <result column="level" jdbcType="INTEGER" property="level"></result>
    </association>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.tony.blog.entity.Blog">
    <result column="contents" jdbcType="LONGVARCHAR" property="contents" />
  </resultMap>
  <sql id="Base_Column_List">
    id, uid, subject, ptime, utime, tag
  </sql>
  <sql id="Blob_Column_List">
    contents
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
   SELECT b.*,u.* FROM blog b inner join user u on b.uid=u.uid
    WHERE b.id = #{id,jdbcType=VARCHAR}
  </select>


  <select id="getAllBlogs" resultMap="ResultMapWithBLOBs">
   SELECT b.*,u.* FROM blog b inner join user u on b.uid=u.uid order by b.ptime DESC
  </select>

  <select id="findBlogsByUid" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
   SELECT id,subject,ptime,utime,tag FROM blog
    WHERE uid=#{uid,jdbcType=VARCHAR} order by ptime DESC
  </select>

  <select id="findBlogsByTag" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
   SELECT * FROM blog
    WHERE tag=#{tag,jdbcType=VARCHAR}
  </select>

  <select id="findBlogsByUserTag" parameterType="map" resultMap="ResultMapWithBLOBs">
   SELECT id,subject,ptime,utime,tag FROM blog
    WHERE tag=#{tag,jdbcType=VARCHAR} and uid=#{uid,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from blog
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.tony.blog.entity.Blog">
    insert into blog (id, uid, subject,
      ptime, utime, tag, 
      contents)
    values (#{id,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR},
      #{ptime,jdbcType=VARCHAR}, #{utime,jdbcType=VARCHAR}, #{tag,jdbcType=VARCHAR}, 
      #{contents,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tony.blog.entity.Blog">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="ptime != null">
        ptime,
      </if>
      <if test="utime != null">
        utime,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="contents != null">
        contents,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="ptime != null">
        #{ptime,jdbcType=VARCHAR},
      </if>
      <if test="utime != null">
        #{utime,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="contents != null">
        #{contents,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tony.blog.entity.Blog">
    update blog
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="ptime != null">
        ptime = #{ptime,jdbcType=VARCHAR},
      </if>
      <if test="utime != null">
        utime = #{utime,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="contents != null">
        contents = #{contents,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tony.blog.entity.Blog">
    update blog
    set uid = #{uid,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      ptime = #{ptime,jdbcType=VARCHAR},
      utime = #{utime,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      contents = #{contents,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tony.blog.entity.Blog">
    update blog
    set uid = #{uid,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      ptime = #{ptime,jdbcType=VARCHAR},
      utime = #{utime,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR}ï¼Œ
      contents = #{contents,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>