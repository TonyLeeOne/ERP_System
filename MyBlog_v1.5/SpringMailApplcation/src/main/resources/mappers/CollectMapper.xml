<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tony.blog.dao.CollectMapper">
  <resultMap id="BaseResultMap" type="com.tony.blog.entity.Collect">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="bid" jdbcType="VARCHAR" property="bid" />
    <association property="blog" javaType="com.tony.blog.entity.Blog">
      <id column="id" jdbcType="VARCHAR" property="id" />
      <result column="subject" jdbcType="VARCHAR" property="subject" />
      <result column="ptime" jdbcType="VARCHAR" property="ptime" />
      <result column="utime" jdbcType="VARCHAR" property="utime" />
      <result column="tag" jdbcType="VARCHAR" property="tag" />
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, uid, bid
  </sql>
  <select id="checkExist" parameterType="com.tony.blog.entity.Collect" resultType="java.lang.Integer">
    select 
    count(1)
    from collection
    where bid = #{bid,jdbcType=VARCHAR}
    and uid = #{uid,jdbcType=VARCHAR}
  </select>

  <select id="findByUser" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    c.*,
    b.id,
    b.subject,
    b.ptime,
    b.utime,
    b.tag
    from collection c
    inner join
    blog b
    on c.bid=b.id
    where
    c.uid=#{uid,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from collection
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.tony.blog.entity.Collect">
    insert into collection (id, uid, bid)
    values (#{id,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, #{bid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tony.blog.entity.Collect">
    insert into collection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="bid != null">
        bid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="bid != null">
        #{bid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tony.blog.entity.Collect">
    update collection
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="bid != null">
        bid = #{bid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tony.blog.entity.Collect">
    update collection
    set uid = #{uid,jdbcType=VARCHAR},
      bid = #{bid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>